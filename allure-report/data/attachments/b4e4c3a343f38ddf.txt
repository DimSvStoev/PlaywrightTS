# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: addElementToCart >> Remove all cart items from reset app state funcitonality
- Location: C:\Users\dimitar.stoev\Desktop\interview framework\AllWynPlaywright\project-root\tests\ui tests\login.spec.ts:65:7

# Error details

```
Error: locator.click: Target page, context or browser has been closed
Call log:
  - waiting for locator('//a[@data-test="reset-sidebar-link"]')
    - locator resolved to <a href="#" tabindex="-1" id="reset_sidebar_link" class="bm-item menu-item" data-test="reset-sidebar-link">Reset App State</a>
  - attempting click action
    2 × waiting for element to be visible, enabled and stable
      - element is visible, enabled and stable
      - scrolling into view if needed
      - done scrolling
      - element is outside of the viewport
    - retrying click action
    - waiting 20ms
    2 × waiting for element to be visible, enabled and stable
      - element is visible, enabled and stable
      - scrolling into view if needed
      - done scrolling
      - element is outside of the viewport
    - retrying click action
      - waiting 100ms
    2 × waiting for element to be visible, enabled and stable
      - element is not visible
    - retrying click action
      - waiting 500ms

    at MainPage.resetAppState (C:\Users\dimitar.stoev\Desktop\interview framework\AllWynPlaywright\project-root\src\pages\MainPage.ts:50:31)
    at C:\Users\dimitar.stoev\Desktop\interview framework\AllWynPlaywright\project-root\tests\ui tests\login.spec.ts:69:5
```

# Test source

```ts
   1 | import { Page, Locator } from '@playwright/test';
   2 | import { AppSettings, ApiService } from '../config/app-settings';
   3 | import { JsonFileReader } from '../utils/data-reader';
   4 |
   5 | export class MainPage {
   6 |
   7 |
   8 |     private readonly fileReader = new JsonFileReader();
   9 |
  10 |     constructor(private readonly page: Page) {}
  11 |
  12 |   get mainPageLogo(): Locator {
  13 |     return this.page.locator('//button[@id="react-burger-menu-btn"]');	
  14 |   }
  15 |
  16 |   get resetAppButton(): Locator {
  17 |     return this.page.locator('//a[@data-test="reset-sidebar-link"]');	
  18 |   }
  19 |
  20 |   get hamburgerMenuButton(): Locator {
  21 |     return this.page.locator('//div[@class="app_logo"]');	
  22 |   }
  23 |
  24 |   get addCartButton(): Locator {
  25 |     return this.page.locator('//button[text()="Add to cart"]');
  26 |   }
  27 |
  28 |   get removeCartButton(): Locator {
  29 |     return this.page.locator('//button[text()="Remove"]');
  30 |   }
  31 |
  32 |   get shopCartIndicator(): Locator {
  33 |     return this.page.locator('[data-test="shopping-cart-badge"]');
  34 |   }
  35 |
  36 |   async getLogoText(): Promise<string> {
  37 |     await this.mainPageLogo.waitFor({ state: 'visible' });
  38 |     return await this.mainPageLogo.textContent() ?? '';	
  39 |   }
  40 |
  41 |   async getShopCartIndicatorText(): Promise<string> {
  42 |     await this.shopCartIndicator.waitFor({ state: 'visible' });
  43 |     return await this.shopCartIndicator.textContent() ?? '';	
  44 |   }
  45 |
  46 |   async resetAppState(): Promise<void> {
  47 |     await this.hamburgerMenuButton.waitFor({ state: 'visible' });
  48 |     await this.hamburgerMenuButton.click();
  49 |     await this.resetAppButton.waitFor({ state: 'visible' });
> 50 |     await this.resetAppButton.click();
     |                               ^ Error: locator.click: Target page, context or browser has been closed
  51 |   }
  52 |   
  53 |  async clickAllButtons(locator:Locator): Promise<void> {
  54 |     await locator.first().waitFor({ state: 'visible' });
  55 |    
  56 |     while (await locator.count() > 0) {
  57 |     await locator.first().click();
  58 |     }
  59 |   }
  60 | }
```