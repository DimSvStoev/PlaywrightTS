# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: addElementToCart >> Remove all cart items from reset app state funcitonality
- Location: /home/runner/work/PlaywrightTS/PlaywrightTS/project-root/tests/ui-tests/login.spec.ts:75:7

# Error details

```
Error: expect(received).toBe(expected) // Object.is equality

Expected: 6
Received: 0
    at /home/runner/work/PlaywrightTS/PlaywrightTS/project-root/tests/ui-tests/login.spec.ts:81:50
```

# Page snapshot

```yaml
- button "Open Menu"
- img "Open Menu"
- navigation:
  - link "All Items"
  - link "About"
  - link "Logout"
  - link "Reset App State"
- button "Close Menu"
- img "Close Menu"
- text: Swag Labs Products Name (A to Z)
- combobox:
  - option "Name (A to Z)" [selected]
  - option "Name (Z to A)"
  - option "Price (low to high)"
  - option "Price (high to low)"
- link "Sauce Labs Backpack":
  - img "Sauce Labs Backpack"
- link "Sauce Labs Backpack"
- text: carry.allTheThings() with the sleek, streamlined Sly Pack that melds uncompromising style with unequaled laptop and tablet protection. $29.99
- button "Remove"
- link "Sauce Labs Bike Light":
  - img "Sauce Labs Bike Light"
- link "Sauce Labs Bike Light"
- text: A red light isn't the desired state in testing but it sure helps when riding your bike at night. Water-resistant with 3 lighting modes, 1 AAA battery included. $9.99
- button "Remove"
- link "Sauce Labs Bolt T-Shirt":
  - img "Sauce Labs Bolt T-Shirt"
- link "Sauce Labs Bolt T-Shirt"
- text: Get your testing superhero on with the Sauce Labs bolt T-shirt. From American Apparel, 100% ringspun combed cotton, heather gray with red bolt. $15.99
- button "Remove"
- link "Sauce Labs Fleece Jacket":
  - img "Sauce Labs Fleece Jacket"
- link "Sauce Labs Fleece Jacket"
- text: It's not every day that you come across a midweight quarter-zip fleece jacket capable of handling everything from a relaxing day outdoors to a busy day at the office. $49.99
- button "Remove"
- link "Sauce Labs Onesie":
  - img "Sauce Labs Onesie"
- link "Sauce Labs Onesie"
- text: Rib snap infant onesie for the junior automation engineer in development. Reinforced 3-snap bottom closure, two-needle hemmed sleeved and bottom won't unravel. $7.99
- button "Remove"
- link "Test.allTheThings() T-Shirt (Red)":
  - img "Test.allTheThings() T-Shirt (Red)"
- link "Test.allTheThings() T-Shirt (Red)"
- text: This classic Sauce Labs t-shirt is perfect to wear when cozying up to your keyboard to automate a few tests. Super-soft and comfy ringspun combed cotton. $15.99
- button "Remove"
- contentinfo:
  - list:
    - listitem:
      - link "Twitter"
    - listitem:
      - link "Facebook"
    - listitem:
      - link "LinkedIn"
  - text: © 2025 Sauce Labs. All Rights Reserved. Terms of Service | Privacy Policy
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import { LoginPage } from '../../src/pages/loginPage';
   3 | import { MainPage } from '../../src/pages/MainPage';
   4 | import path from 'path';
   5 | import { JsonFileReader } from '../../src/utils/data-reader';
   6 |
   7 | const dataFile = path.resolve(__dirname, '../../src/test-data/UI-testData.json');
   8 | const fileReader = new JsonFileReader();
   9 |
  10 | interface TestUser {
  11 |   username: string;
  12 |   password: string;
  13 |   shouldLogin?: boolean;
  14 |   message?: string;
  15 | }
  16 |
  17 | interface TypeOfTestData {
  18 |   users: TestUser[];
  19 | }
  20 |
  21 | const testData = fileReader.readFile(dataFile) as TypeOfTestData;
  22 |
  23 | test.describe('🔐 Data-Driven Login Form Tests', () => {
  24 |   testData.users.forEach((user, index) => {
  25 |     test(`Login #${index + 1}: "${user.username ?? '<empty>'}" should ${user.shouldLogin ? 'succeed' : 'fail'}`, async ({ page }) => {
  26 |       const loginPage = new LoginPage(page);
  27 |       const mainPage = new MainPage(page);
  28 |       await loginPage.goToLoginPage();
  29 |       await loginPage.login(user.username, user.password);
  30 |
  31 |       if (user.shouldLogin == false) {
  32 |         expect(await loginPage.getErrorMessagetext()).toBe(user.message);
  33 |       } else {
  34 |         expect(await mainPage.getMainPageText()).toBe('Products');
  35 |       }
  36 |     });
  37 |   });
  38 |
  39 |     test('logout', async ({ page }) => {
  40 |     const loginPage = new LoginPage(page);
  41 |     const mainPage = new MainPage(page);
  42 |     await loginPage.goToLoginPage();
  43 |     await loginPage.login('standard_user', 'secret_sauce');
  44 |     await mainPage.logOut();
  45 |
  46 |   });
  47 | });
  48 |
  49 |
  50 | test.describe('addElementToCart', () => {
  51 |   test.beforeEach(async ({ page }) => {
  52 |     const loginPage = new LoginPage(page);
  53 |     await loginPage.goToLoginPage();
  54 |     await loginPage.login('standard_user', 'secret_sauce');
  55 |   });
  56 |
  57 |   test('Add all elements to cart', async ({ page }) => {
  58 |     const mainPage = new MainPage(page);
  59 |     const addCartButtonCounter:number = await mainPage.addCartButton.count();
  60 |     await mainPage.clickAllButtons(mainPage.addCartButton);
  61 |     expect(await mainPage.removeCartButton.count()).toBe(addCartButtonCounter);
  62 |     expect(parseInt( await mainPage.getShopCartIndicatorText())).toBe(addCartButtonCounter);
  63 |   });
  64 |
  65 |   test('Remove all cart items from remove button', async ({ page }) => {
  66 |     const mainPage = new MainPage(page);
  67 |     const addCartButtonCounter:number = await mainPage.addCartButton.count();
  68 |     await mainPage.clickAllButtons(mainPage.addCartButton);
  69 |     await mainPage.clickAllButtons(mainPage.removeCartButton);
  70 |
  71 |     expect(await mainPage.addCartButton.count()).toBe(addCartButtonCounter);
  72 |     //expect(await mainPage.shopCartIndicator).toBeHidden();
  73 |   });
  74 |
  75 |   test('Remove all cart items from reset app state funcitonality', async ({ page }) => {
  76 |     const mainPage = new MainPage(page);
  77 |     const addCartButtonCounter:number = await mainPage.addCartButton.count();
  78 |     await mainPage.clickAllButtons(mainPage.addCartButton);
  79 |     await mainPage.resetAppState();
  80 |
> 81 |     expect(await mainPage.addCartButton.count()).toBe(addCartButtonCounter);
     |                                                  ^ Error: expect(received).toBe(expected) // Object.is equality
  82 |     expect(await mainPage.shopCartIndicator).toBeHidden();
  83 |   });
  84 | });
```